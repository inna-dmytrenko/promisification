{"version":3,"sources":["webpack:///./js/task03.js"],"names":["makeTransaction","transaction","Promise","resolve","reject","min","max","delay","Math","floor","random","setTimeout","id","time","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":"iJAUMA,EAAkB,SAACC,GACrB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAN2BC,EAAKC,EAM1BC,GANqBF,EAMa,IANRC,EAMa,IAL1CE,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,GAAKA,IAMhDM,YAAW,WACYH,KAAKE,SAAW,GAE/BP,EAAQ,CACdS,GAAIX,EAAYW,GAChBC,KAAMN,IAGAH,EAAOH,EAAYW,MAGxBL,OAGLO,EAAa,SAAC,GAAe,IAAdF,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACzBE,QAAQC,IAAR,eAA2BJ,EAA3B,iBAA8CC,EAA9C,OAEMI,EAAW,SAAAL,GACjBG,QAAQG,KAAR,gCAA6CN,EAA7C,8BAUAZ,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,MAASC,KAAKN,GAAaO,MAAMJ,GAEnEjB,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,MAAQC,KAAKN,GAAaO,MAAMJ,GAElEjB,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,KAAOC,KAAKN,GAAaO,MAAMJ,GAEjEjB,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,MAAQC,KAAKN,GAAaO,MAAMJ,G","file":"main.3d285f345fa042ad416a.js","sourcesContent":["// Задание 3 Перепиши функцию\r\n//   makeTransaction() так, чтобы она не использовала callback-функции onSuccess и\r\n//   onError, а принимала всего один параметр transaction и возвращала промис.\r\n\r\n// import { resolve } from \"core-js/fn/promise\";\r\n\r\nconst randomIntegerFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = (transaction) => {\r\n    return new Promise((resolve, reject) => {\r\n        const delay = randomIntegerFromInterval(200, 500);\r\n        setTimeout(() => {\r\n            const canProcess = Math.random() > 0.3;\r\n            if (canProcess) {\r\n                resolve({\r\n          id: transaction.id,\r\n          time: delay\r\n        });\r\n            } else {\r\n                reject(transaction.id);\r\n            }\r\n\r\n        }, delay);\r\n    });\r\n};\r\nconst logSuccess = ({id, time}) => {\r\nconsole.log(`Transaction ${id} processed in ${time}ms`); };\r\n\r\nconst logError = id => {\r\nconsole.warn(`Error processing transaction ${id}. Please try again later.`); };\r\n\r\n\r\n\r\n    // - Работает так _ /\r\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\r\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\r\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\r\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError); \r\n// - Должно работать так \\* / \r\nmakeTransaction({ id: 70, amount: 150 })  .then(logSuccess) .catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 }) .then(logSuccess) .catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 }) .then(logSuccess) .catch(logError);\r\n\r\nmakeTransaction({ id: 73, amount: 100 }) .then(logSuccess) .catch(logError);"],"sourceRoot":""}